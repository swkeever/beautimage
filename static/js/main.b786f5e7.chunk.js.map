{"version":3,"sources":["components/Nav.js","types/scrollOptions.js","types/photo.js","types/children.js","components/InfiniteScrollWrapper.js","components/Loading.js","components/Brick.js","components/Masonry.js","services/photos.js","reducers/photoReducer.js","components/Home.js","components/Photo.js","components/Notification.js","components/User.js","App.js","index.js"],"names":["withRouter","PropTypes","shape","duration","number","isRequired","smooth","string","func","bool","_ref","setSearchQuery","nightMode","setNightMode","columns","setColumns","loading","history","scrollOptions","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","executeSearch","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","preventDefault","animateScroll","scrollToTop","push","stop","_x","apply","this","arguments","backHome","_ref3","_callee2","_context2","linkBehavior","location","pathname","react_default","createElement","Menu","borderless","inverted","fixed","Item","header","onClick","Icon","className","name","Responsive","minWidth","onlyMobile","maxWidth","secondary","active","Form","onSubmit","Input","id","transparent","size","type","onChange","_ref4","target","value","placeholder","icon","link","position","any","oneOfType","arrayOf","node","sponsorShape","accepted_tos","bio","first_name","instagram_username","last_name","links","followers","following","html","likes","photos","portfolio","self","portfolio_url","profile_image","large","medium","small","total_collections","total_likes","total_photos","twitter_username","updated_at","username","alt_description","categories","color","created_at","current_user_collections","description","height","liked_by_user","download","download_location","sponsorship","impressions_id","sponsor","tagline","urls","full","raw","regular","thumb","user","width","children","getMorePhotos","hasMore","lib_default","dataLength","length","scrollableTarget","endMessage","Header","textAlign","role","aria-label","Subheader","react_router_dom","to","Loading","Loader","style","top","left","Brick","photo","concat","Image","srcSet","src","alt","paddingBottom","Masonry","getColumnOfBricks","columnIndex","bricks","i","components_Brick","key","Grid","Column","layout","stackable","centered","padded","result","getBricks","components_InfiniteScrollWrapper","components_Loading","defaultProps","baseUrl","getAuthHeader","Authorization","process","services_photos","getPhotos","page","headers","params","url","per_page","axios","get","sent","abrupt","data","getPhotoById","_x2","searchPhotos","_callee3","query","_context3","results","_x3","_x4","getUserPhotos","_callee4","_context4","_x5","_x6","photoReducer","options","isInit","actionType","actionData","currentPage","setCurrentPage","setPhotos","setLoading","setMessage","setHasMore","items","response","t0","photoService","Error","t1","content","message","Home","searchQuery","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useContext","useContext","MessageContext","useEffect","Container","as","Divider","components_Masonry","photoId","setPhoto","_useState9","_useState10","_useState11","_useState12","tags","setTags","selectedTags","slice","Math","min","map","tag","title","filter","join","fetchPhoto","filteredPhotos","p","socialMedia","handle","_","href","story","toLowerCase","getTitle","fluid","paddingRight","avatar","bordered","marginBottom","Notification","_useContext2","setTimeout","defineProperty","react_animation","animationIn","animationOut","Fragment","Message","User","getSocialMediaLink","socialInfo","iconName","isAvailable","List","marginRight","circular","margin","horizontal","React","createContext","App","screenWidth","window","innerWidth","onlyTablet","getInitialColumns","Provider","Segment","components_Notification","components_Nav","react_router","exact","path","render","components_Home","match","components_Photo","components_User","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b786f5e7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Menu, Icon, Input, Form, Responsive,\n} from 'semantic-ui-react';\nimport { animateScroll } from 'react-scroll';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport scrollOptionsType from '../types/scrollOptions';\n\nconst Nav = ({\n  setSearchQuery,\n  nightMode,\n  setNightMode,\n  columns,\n  setColumns,\n  loading,\n  history,\n  scrollOptions,\n}) => {\n  const [search, setSearch] = useState('');\n\n  const executeSearch = async (event) => {\n    event.preventDefault();\n    animateScroll.scrollToTop(scrollOptions);\n    setSearchQuery(search);\n    history.push('/');\n  };\n\n  const backHome = async () => {\n    setSearch('');\n    setSearchQuery('');\n    history.push('/');\n  };\n\n  const isHome = history.location.pathname === '/';\n  const linkBehavior = isHome ? () => animateScroll.scrollToTop(scrollOptions) : backHome;\n\n  return (\n    <Menu borderless inverted={nightMode} fixed=\"top\">\n      <Menu.Item header onClick={linkBehavior}>\n        <Icon className=\"primary\" name=\"image\" />\n        <Responsive minWidth={Responsive.onlyMobile.maxWidth}>\n          beaut\n          <span className=\"primary\">image</span>\n        </Responsive>\n      </Menu.Item>\n      <Responsive minWidth={Responsive.onlyMobile.maxWidth}>\n        <Menu secondary>\n          <Menu.Item active={columns === 1} onClick={() => setColumns(1)}>\n            <Icon name=\"list layout\" />\n          </Menu.Item>\n          <Menu.Item active={columns === 2} onClick={() => setColumns(2)}>\n            <Icon name=\"block layout\" />\n          </Menu.Item>\n          <Menu.Item active={columns === 3} onClick={() => setColumns(3)}>\n            <Icon name=\"grid layout\" />\n          </Menu.Item>\n        </Menu>\n      </Responsive>\n      <Menu.Item>\n        <Form onSubmit={executeSearch}>\n          <Input\n            id=\"search-input\"\n            loading={loading}\n            transparent\n            size=\"small\"\n            type=\"text\"\n            onChange={({ target }) => setSearch(target.value)}\n            value={search}\n            placeholder=\"search...\"\n            icon={<Icon inverted={nightMode} name=\"search\" link onClick={executeSearch} />}\n          />\n        </Form>\n      </Menu.Item>\n      <Menu.Item position=\"right\" active={nightMode} onClick={() => setNightMode(!nightMode)}>\n        <Icon name=\"moon\" />\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nconst {\n  func, bool, number,\n} = PropTypes;\n\nNav.propTypes = {\n  setSearchQuery: func.isRequired,\n  nightMode: bool.isRequired,\n  setNightMode: func.isRequired,\n  columns: number.isRequired,\n  setColumns: func.isRequired,\n  loading: bool.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n  scrollOptions: scrollOptionsType.isRequired,\n};\n\nexport default withRouter(Nav);\n","import PropTypes from 'prop-types';\n\nconst scrollOptionsType = PropTypes.shape({\n  duration: PropTypes.number.isRequired,\n  smooth: PropTypes.string.isRequired,\n});\n\nexport default scrollOptionsType;\n","import PropTypes from 'prop-types';\n\nconst {\n  any, arrayOf, bool, number, shape, string,\n} = PropTypes;\n\nconst sponsorShape = shape({\n  accepted_tos: bool,\n  bio: string,\n  first_name: string,\n  id: string.isRequired,\n  instagram_username: string,\n  last_name: string,\n  links: shape({\n    followers: string.isRequired,\n    following: string.isRequired,\n    html: string.isRequired,\n    likes: string.isRequired,\n    photos: string.isRequired,\n    portfolio: string.isRequired,\n    self: string.isRequired,\n  }).isRequired,\n  location: string,\n  name: string.isRequired,\n  portfolio_url: string,\n  profile_image: shape({\n    large: string.isRequired,\n    medium: string.isRequired,\n    small: string.isRequired,\n  }).isRequired,\n  total_collections: number.isRequired,\n  total_likes: number.isRequired,\n  total_photos: number.isRequired,\n  twitter_username: string,\n  updated_at: string.isRequired,\n  username: string.isRequired,\n});\n\nconst photoType = shape({\n  alt_description: string,\n  categories: arrayOf(string).isRequired,\n  color: string.isRequired,\n  created_at: string.isRequired,\n  current_user_collections: arrayOf(any).isRequired,\n  description: string,\n  height: number.isRequired,\n  id: string.isRequired,\n  liked_by_user: bool.isRequired,\n  likes: number.isRequired,\n  links: shape({\n    download: string.isRequired,\n    download_location: string.isRequired,\n    html: string.isRequired,\n    self: string.isRequired,\n  }).isRequired,\n  sponsorship: shape({\n    impressions_id: string,\n    sponsor: sponsorShape.isRequired,\n    tagline: string.isRequired,\n  }),\n  updated_at: string.isRequired,\n  urls: shape({\n    full: string.isRequired,\n    raw: string.isRequired,\n    regular: string.isRequired,\n    small: string.isRequired,\n    thumb: string.isRequired,\n  }).isRequired,\n  user: sponsorShape.isRequired,\n  width: number.isRequired,\n});\n\nexport default photoType;\n","import PropTypes from 'prop-types';\n\nconst childrenType = PropTypes.oneOfType([\n  PropTypes.arrayOf(PropTypes.node),\n  PropTypes.node,\n]);\n\nexport default childrenType;\n","import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport PropTypes from 'prop-types';\nimport { Header } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport childrenType from '../types/children';\nimport photoType from '../types/photo';\n\nconst InfiniteScrollWrapper = ({\n  children, photos, getMorePhotos, hasMore, nightMode, history,\n}) => (\n  <InfiniteScroll\n    dataLength={photos.length} // This is important field to render the next data\n    next={getMorePhotos}\n    scrollableTarget=\"iamge-gallery\"\n    hasMore={hasMore}\n    endMessage={(\n      <Header inverted={nightMode} textAlign=\"center\">\n        You have seen it all!\n        {' '}\n        <span role=\"img\" aria-label=\"smiley\">😄</span>\n        {history.location.pathname === '/' ? null : (\n          <Header.Subheader>\n          Go\n            {' '}\n            <Link to=\"/\">home</Link>\n          ?\n          </Header.Subheader>\n        )}\n      </Header>\n      )}\n  >\n    {children}\n  </InfiniteScroll>\n);\n\nInfiniteScrollWrapper.propTypes = {\n  children: childrenType.isRequired,\n  photos: PropTypes.arrayOf(photoType).isRequired,\n  getMorePhotos: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  nightMode: PropTypes.bool.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n};\n\nexport default withRouter(InfiniteScrollWrapper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'semantic-ui-react';\n\nconst Loading = ({\n  nightMode,\n  loading,\n}) => (\n  <Loader inverted={nightMode} active={loading} size=\"big\" style={{ position: 'fixed', top: '95%', left: '50%' }} />\n);\n\nLoading.propTypes = {\n  nightMode: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Loading;\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport photoType from '../types/photo';\n\nconst Brick = ({ photo }) => (\n  <Link to={`/photos/${photo.id}`}>\n    <Image\n      srcSet={`${photo.urls.thumb} 600w, \n            ${photo.urls.small} 1000w, \n            ${photo.urls.regular} 1500w`}\n      src={photo.urls.thumb}\n      alt={photo.alt_description}\n      size=\"medium\"\n      style={{ width: '100%', paddingBottom: '0.33rem' }}\n    />\n  </Link>\n);\n\nBrick.propTypes = {\n  photo: photoType.isRequired,\n};\n\nexport default Brick;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from 'semantic-ui-react';\nimport InfiniteScrollWrapper from './InfiniteScrollWrapper';\nimport photoType from '../types/photo';\nimport Loading from './Loading';\nimport Brick from './Brick';\n\nconst Masonry = ({\n  photos,\n  getMorePhotos,\n  nightMode,\n  loading,\n  columns,\n  hasMore,\n}) => {\n  const getColumnOfBricks = (columnIndex) => {\n    const bricks = [];\n    for (let i = columnIndex; i < photos.length; i += columns) {\n      const photo = photos[i];\n      bricks.push(<Brick key={photo.id} photo={photo} />);\n    }\n    return <Grid.Column key={`col-${columnIndex}`}>{bricks}</Grid.Column>;\n  };\n\n  const getBricks = () => {\n    // TODO: fix loading here, should load while this function is happening.\n    const result = [];\n    for (let i = 0; i < columns; i += 1) {\n      result.push(getColumnOfBricks(i));\n    }\n    return result;\n  };\n\n  const layout = (\n    <Grid\n      stackable\n      id=\"image-gallery\"\n      centered\n      columns={columns}\n      padded\n    >\n      {getBricks()}\n    </Grid>\n  );\n\n\n  return (\n    <div>\n      <InfiniteScrollWrapper nightMode={nightMode} hasMore={hasMore} photos={photos} getMorePhotos={getMorePhotos}>\n        {layout}\n      </InfiniteScrollWrapper>\n      <Loading nightMode={nightMode} loading={loading} />\n    </div>\n  );\n};\n\nMasonry.defaultProps = {\n  hasMore: false,\n};\n\nMasonry.propTypes = {\n  photos: PropTypes.arrayOf(photoType).isRequired,\n  getMorePhotos: PropTypes.func.isRequired,\n  nightMode: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  columns: PropTypes.number.isRequired,\n  hasMore: PropTypes.bool,\n};\n\nexport default Masonry;\n","import axios from 'axios';\n\nconst baseUrl = 'https://api.unsplash.com';\nexport const PER_PAGE = 12;\n\nconst getAuthHeader = () => ({\n  Authorization: `Client-ID ${process.env.REACT_APP_ACCESS_KEY}`,\n});\n\nconst getPhotos = async (page) => {\n  const headers = getAuthHeader();\n  const params = {\n    page,\n    per_page: PER_PAGE,\n  };\n  const url = `${baseUrl}/photos`;\n  const result = await axios.get(url, { headers, params });\n\n  return result.data;\n};\n\nconst getPhotoById = async (id) => {\n  const headers = getAuthHeader();\n  const url = `${baseUrl}/photos/${id}`;\n  const result = await axios.get(url, { headers });\n  return result.data;\n};\n\nconst searchPhotos = async (page, query) => {\n  const headers = getAuthHeader();\n  const params = {\n    page,\n    per_page: PER_PAGE,\n    query,\n  };\n  const url = `${baseUrl}/search/photos`;\n  const result = await axios.get(url, { headers, params });\n\n  return result.data.results;\n};\n\nconst getUserPhotos = async (page, username) => {\n  const headers = getAuthHeader();\n  const params = {\n    page,\n    per_page: PER_PAGE,\n  };\n  const url = `${baseUrl}/users/${username}/photos`;\n  const result = await axios.get(url, { headers, params });\n\n  return result.data;\n};\n\nexport default {\n  getPhotos,\n  getPhotoById,\n  searchPhotos,\n  getUserPhotos,\n};\n","import photoService, { PER_PAGE } from '../services/photos';\n\nconst photoReducer = async (options) => {\n  const {\n    isInit,\n    actionType,\n    actionData,\n    photos,\n    currentPage,\n    setCurrentPage,\n    setPhotos,\n    setLoading,\n    setMessage,\n    setHasMore,\n  } = options;\n\n  setLoading(true);\n  const page = isInit ? 1 : currentPage;\n  const items = isInit ? [] : photos;\n\n  try {\n    let response;\n\n    switch (actionType) {\n      case 'photos':\n        response = await photoService.getPhotos(page);\n        break;\n      case 'search':\n        response = await photoService.searchPhotos(page, actionData);\n        break;\n      case 'user':\n        response = await photoService.getUserPhotos(page, actionData);\n        break;\n      default:\n        throw new Error(`invalid type ${actionType}`);\n    }\n\n    setHasMore(response.length === PER_PAGE);\n    setPhotos(items.concat(response));\n    setCurrentPage(page + 1);\n  } catch (err) {\n    setMessage({\n      type: 'error',\n      header: 'Error',\n      content: err.message,\n    });\n    setHasMore(false);\n  }\n\n  setLoading(false);\n};\n\nexport default photoReducer;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Container, Header, Divider, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Masonry from './Masonry';\nimport { MessageContext } from '../App';\nimport photoReducer from '../reducers/photoReducer';\n\nconst Home = ({\n  nightMode,\n  columns,\n  searchQuery,\n}) => {\n  const [photos, setPhotos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const [, setMessage] = useContext(MessageContext);\n\n  useEffect(() => {\n    photoReducer({\n      isInit: true,\n      actionType: searchQuery ? 'search' : 'photos',\n      actionData: searchQuery || null,\n      photos,\n      currentPage,\n      setCurrentPage,\n      setPhotos,\n      setLoading,\n      setMessage,\n      setHasMore,\n    });\n  }, [searchQuery]);\n\n  if (!photos.length) {\n    return null;\n  }\n\n  const getMorePhotos = () => photoReducer({\n    isInit: false,\n    actionType: searchQuery ? 'search' : 'photos',\n    actionData: searchQuery || null,\n    photos,\n    currentPage,\n    setCurrentPage,\n    setPhotos,\n    setLoading,\n    setMessage,\n    setHasMore,\n  });\n\n  return (\n    <Container className=\"page\">\n      <Header\n        inverted={nightMode}\n        as=\"h1\"\n        textAlign=\"center\"\n        icon\n      >\n        <Icon name=\"image\" />\n        beaut\n        <span className=\"primary\">image</span>\n        <Header.Subheader>a simple way to find beautiful images.</Header.Subheader>\n      </Header>\n      <Divider inverted={nightMode} />\n      <Masonry\n        hasMore={hasMore}\n        photos={photos}\n        getMorePhotos={getMorePhotos}\n        nightMode={nightMode}\n        loading={loading}\n        columns={columns}\n      />\n    </Container>\n  );\n};\n\nHome.propTypes = {\n  nightMode: PropTypes.bool.isRequired,\n  columns: PropTypes.number.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n};\n\nexport default Home;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Container, Loader, Image, Icon, Header, Grid, Menu, Button, Label, Responsive, Sidebar, Segment, Divider,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { animateScroll } from 'react-scroll';\nimport { withRouter } from 'react-router-dom';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport photoService from '../services/photos';\n// eslint-disable-next-line import/no-cycle\nimport { MessageContext } from '../App';\nimport Masonry from './Masonry';\nimport scrollOptionsType from '../types/scrollOptions';\nimport photoReducer from '../reducers/photoReducer';\n\nconst Photo = ({\n  photoId,\n  nightMode,\n  columns,\n  scrollOptions,\n  history,\n}) => {\n  const [photos, setPhotos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [photo, setPhoto] = useState(null);\n  const [hasMore, setHasMore] = useState(false);\n  const [, setMessage] = useContext(MessageContext);\n  const [tags, setTags] = useState('');\n\n  useEffect(() => {\n    const fetchPhoto = async () => {\n      let result;\n      setLoading(true);\n\n      animateScroll.scrollToTop(scrollOptions);\n\n      try {\n        result = await photoService.getPhotoById(photoId);\n        const selectedTags = result.tags\n          .slice(0, Math.min(5, result.tags.length))\n          .map(tag => tag.title)\n          .filter(tag => tag.length > 3)\n          .join(' ');\n        setTags(selectedTags);\n        setPhoto(result);\n        photoReducer({\n          isInit: true,\n          actionType: 'search',\n          actionData: selectedTags,\n          photos,\n          currentPage,\n          setPhotos,\n          setCurrentPage,\n          setLoading,\n          setMessage,\n          setHasMore,\n        });\n      } catch (err) {\n        setMessage({\n          type: 'error',\n          header: 'Error',\n          content: err.message,\n        });\n      }\n\n      setLoading(false);\n    };\n    fetchPhoto();\n  }, [photoId]);\n\n  const getTitle = () => {\n    let { title } = photo.story;\n\n    if (!title) {\n      title = photo.alt_description;\n\n      if (!title) {\n        title = `Photo ${photo.id}`;\n      }\n    }\n\n    return title.toLowerCase();\n  };\n\n  if (!photo) {\n    return <Loader />;\n  }\n\n  const filteredPhotos = photos.filter(p => p.id !== photoId);\n\n  const socialMedia = (type) => {\n    const handle = _.get(photo, `user.${type}_username`);\n\n    if (!handle) {\n      return null;\n    }\n\n    return (\n      <Menu.Item link>\n        <a href={`https://www.${type}.com/${handle}`}>\n          <Icon name={type} />\n          {type}\n        </a>\n      </Menu.Item>\n    );\n  };\n\n  const goToUserPage = () => {\n    animateScroll.scrollToTop(scrollOptions);\n    history.push(`/users/${photo.user.username}`);\n  };\n\n  const getMorePhotos = () => photoReducer({\n    isInit: false,\n    actionType: 'search',\n    actionData: tags,\n    photos,\n    currentPage,\n    setPhotos,\n    setCurrentPage,\n    setLoading,\n    setMessage,\n    setHasMore,\n  });\n\n  const photoStyle = photo.width > photo.height\n    ? { width: '100vw', height: 'auto' }\n    : { height: '100vh', width: 'auto' };\n\n  return (\n    <Container className=\"page\">\n      <Header\n        textAlign=\"left\"\n        inverted={nightMode}\n        as=\"h2\"\n      >\n        {getTitle()}\n      </Header>\n      <Menu\n        inverted={nightMode}\n        borderless\n        stackable\n        secondary\n        fluid\n      >\n        <Menu.Item header link onClick={goToUserPage}>\n          <Image style={{ paddingRight: '3px' }} avatar src={photo.user.profile_image.small} />\n          {photo.user.first_name.toLowerCase()}\n              &nbsp;\n          <span className=\"primary\">\n            {photo.user.last_name ? photo.user.last_name.toLowerCase() : ''}\n          </span>\n        </Menu.Item>\n        {socialMedia('instagram')}\n        {socialMedia('twitter')}\n        <Menu.Item position=\"right\" link>\n          <a href={photo.links.download} download>\n            <Icon\n              name=\"download\"\n            />\n            download\n          </a>\n        </Menu.Item>\n      </Menu>\n      <Image\n        size=\"large\"\n        centered\n        bordered\n        src={photo.urls.thumb}\n        srcSet={`${photo.urls.thumb} 200w, \n                      ${photo.urls.small} 400w, \n                      ${photo.urls.regular} 1080w`}\n      />\n      <Divider />\n      <Header inverted={nightMode} as=\"h2\">\n        related\n        {' '}\n        <span className=\"primary\">images</span>\n      </Header>\n      <Masonry\n        photos={filteredPhotos}\n        getMorePhotos={getMorePhotos}\n        nightMode={nightMode}\n        loading={loading}\n        columns={columns}\n        photoId={photoId}\n        hasMore={hasMore}\n      />\n    </Container>\n  );\n};\n\nPhoto.propTypes = {\n  photoId: PropTypes.string.isRequired,\n  nightMode: PropTypes.bool.isRequired,\n  columns: PropTypes.number.isRequired,\n  scrollOptions: scrollOptionsType.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n};\n\nexport default withRouter(Photo);\n","import React, { useContext } from 'react';\nimport { Message } from 'semantic-ui-react';\nimport { AnimateOnChange } from 'react-animation';\nimport { MessageContext } from '../App';\n\nconst style = {\n  top: '4rem',\n  width: '100%',\n  marginBottom: '1rem',\n  position: 'sticky',\n};\n\nconst Notification = () => {\n  const [message, setMessage] = useContext(MessageContext);\n  const duration = 10000;\n\n  setTimeout(() => {\n    setMessage(null);\n  }, duration);\n\n  const type = message ? { [message.type]: true } : '';\n\n  return (\n    <AnimateOnChange\n      style={style}\n      animationIn=\"bounceIn\"\n      animationOut=\"fadeOut\"\n    >\n      {message\n        ? (\n          <>\n            <Message\n              {...type}\n            >\n              <Message.Header>{message.header}</Message.Header>\n              <p>{message.content}</p>\n            </Message>\n\n          </>\n        )\n        : null\n    }\n    </AnimateOnChange>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container, Header, Image, Loader, List, Icon,\n} from 'semantic-ui-react';\nimport Masonry from './Masonry';\nimport { MessageContext } from '../App';\nimport photoReducer from '../reducers/photoReducer';\n\nconst User = ({\n  username,\n  nightMode,\n  columns,\n}) => {\n  const [photos, setPhotos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [, setMessage] = useContext(MessageContext);\n\n  useEffect(() => {\n    photoReducer({\n      isInit: true,\n      actionType: 'user',\n      actionData: username,\n      photos,\n      setPhotos,\n      currentPage,\n      setCurrentPage,\n      setLoading,\n      setMessage,\n      setHasMore,\n    });\n  }, [username]);\n\n  const getMorePhotos = () => photoReducer({\n    isInit: false,\n    actionType: 'user',\n    actionData: username,\n    photos,\n    setPhotos,\n    currentPage,\n    setCurrentPage,\n    setLoading,\n    setMessage,\n    setHasMore,\n  });\n\n  const getSocialMediaLink = (socialInfo) => {\n    const { url, iconName, isAvailable } = socialInfo;\n\n    if (!isAvailable) {\n      return null;\n    }\n\n    return (\n      <List.Item>\n        <a href={url}>\n          <Icon\n            name={iconName}\n            link\n            size=\"large\"\n          />\n        </a>\n      </List.Item>\n    );\n  };\n\n  if (!photos.length) {\n    return <Loader />;\n  }\n\n  const { user } = photos[0];\n\n  return (\n    <Container className=\"page\">\n      <Header inverted={nightMode} textAlign=\"center\" as=\"h1\">\n        <Image\n          style={{ marginRight: '0.5rem' }}\n          centered\n          circular\n          src={user.profile_image.large}\n        />\n        {user.first_name.toLowerCase()}\n        &nbsp;\n        <span className=\"primary\">\n          {user.last_name ? user.last_name.toLowerCase() : ''}\n        </span>\n      </Header>\n      <Container style={{margin: '1.5rem 0'}} textAlign=\"center\">\n        <List inverted={nightMode} horizontal>\n          {getSocialMediaLink({\n            isAvailable: !!user.portfolio_url,\n            iconName: 'briefcase',\n            url: user.portfolio_url,\n          })}\n          {getSocialMediaLink({\n            isAvailable: !!user.instagram_username,\n            iconName: 'instagram',\n            url: `https://www.instagram.com/${user.instagram_username}`,\n          })}\n          {getSocialMediaLink({\n            isAvailable: !!user.twitter_username,\n            iconName: 'twitter',\n            url: `https://www.twitter.com/${user.twitter_username}`,\n          })}\n        </List>\n      </Container>\n      <Masonry\n        photos={photos}\n        getMorePhotos={getMorePhotos}\n        nightMode={nightMode}\n        loading={loading}\n        columns={columns}\n        hasMore={hasMore}\n      />\n    </Container>\n  );\n};\n\nUser.propTypes = {\n  username: PropTypes.string.isRequired,\n  nightMode: PropTypes.bool.isRequired,\n  columns: PropTypes.number.isRequired,\n};\n\nexport default User;\n","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  HashRouter,\n  Route,\n} from 'react-router-dom';\nimport {\n  Segment, Responsive,\n} from 'semantic-ui-react';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport Photo from './components/Photo';\nimport Notification from './components/Notification';\nimport User from './components/User';\n\nconst scrollOptions = {\n  duration: 1000,\n  smooth: 'easeInOutQuint',\n};\n\nexport const MessageContext = React.createContext();\n\nconst getInitialColumns = () => {\n  const screenWidth = window.innerWidth;\n  if (screenWidth <= Responsive.onlyMobile.maxWidth) {\n    return 1;\n  } if (screenWidth <= Responsive.onlyTablet.maxWidth) {\n    return 2;\n  }\n  return 3;\n};\n\nconst App = () => {\n  const [columns, setColumns] = useState(getInitialColumns());\n  const [nightMode, setNightMode] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [message, setMessage] = useState(null);\n\n  return (\n    <MessageContext.Provider value={[message, setMessage]}>\n      <Segment inverted={nightMode}>\n        <HashRouter>\n          <Notification />\n          <Nav\n            searchQuery={searchQuery}\n            setSearchQuery={setSearchQuery}\n            nightMode={nightMode}\n            setNightMode={setNightMode}\n            columns={columns}\n            setColumns={setColumns}\n            scrollOptions={scrollOptions}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Home\n                nightMode={nightMode}\n                columns={columns}\n                searchQuery={searchQuery}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/photos/:id\"\n            render={({ match }) => (\n              <Photo\n                photoId={match.params.id}\n                nightMode={nightMode}\n                columns={columns}\n                scrollOptions={scrollOptions}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/users/:username\"\n            render={({ match }) => (\n              <User\n                username={match.params.username}\n                nightMode={nightMode}\n                columns={columns}\n              />\n            )}\n          />\n        </HashRouter>\n      </Segment>\n    </MessageContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}