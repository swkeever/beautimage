{"version":3,"sources":["components/Nav.js","types/scrollOptions.js","types/photo.js","types/children.js","components/InfiniteScrollWrapper.js","components/Loading.js","components/Brick.js","components/Masonry.js","services/photos.js","reducers/photoReducer.js","components/Home.js","components/Photo.js","components/Notification.js","components/User.js","App.js","index.js"],"names":["withRouter","PropTypes","shape","duration","number","isRequired","smooth","string","func","bool","_ref","setSearchQuery","nightMode","setNightMode","columns","setColumns","loading","history","scrollOptions","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","executeSearch","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","preventDefault","animateScroll","scrollToTop","push","stop","_x","apply","this","arguments","backHome","_ref3","_callee2","_context2","linkBehavior","location","pathname","react_default","createElement","Menu","borderless","inverted","fixed","Item","header","onClick","Icon","className","name","Responsive","minWidth","onlyMobile","maxWidth","secondary","active","Form","onSubmit","Input","id","transparent","size","type","onChange","_ref4","target","value","placeholder","icon","link","position","any","oneOfType","arrayOf","node","sponsorShape","accepted_tos","bio","first_name","instagram_username","last_name","links","followers","following","html","likes","photos","portfolio","self","portfolio_url","profile_image","large","medium","small","total_collections","total_likes","total_photos","twitter_username","updated_at","username","InfiniteScrollWrapper","alt_description","categories","color","created_at","current_user_collections","description","height","liked_by_user","download","download_location","sponsorship","impressions_id","sponsor","tagline","urls","full","raw","regular","thumb","user","width","children","getMorePhotos","hasMore","lib_default","dataLength","length","scrollableTarget","endMessage","Header","textAlign","role","aria-label","Subheader","react_router_dom","to","Loading","Loader","style","top","left","Brick","photo","concat","Image","srcSet","src","alt","paddingBottom","Masonry","getColumnOfBricks","columnIndex","bricks","i","components_Brick","key","Grid","Column","layout","stackable","centered","padded","result","getBricks","components_InfiniteScrollWrapper","components_Loading","defaultProps","baseUrl","getAuthHeader","Authorization","process","services_photos","getPhotos","page","headers","params","url","per_page","axios","get","sent","abrupt","data","getPhotoById","_x2","searchPhotos","_callee3","query","_context3","results","_x3","_x4","getUserPhotos","_callee4","_context4","_x5","_x6","photoReducer","options","isInit","actionType","actionData","currentPage","setCurrentPage","setPhotos","setLoading","setMessage","setHasMore","items","response","t0","photoService","Error","t1","content","message","Home","searchQuery","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useContext","useContext","MessageContext","useEffect","Container","as","Divider","components_Masonry","photoId","setPhoto","_useState9","_useState10","_useState11","_useState12","tags","setTags","selectedTags","slice","Math","min","map","tag","title","filter","join","fetchPhoto","filteredPhotos","p","socialMedia","handle","_","href","photoStyle","story","toLowerCase","getTitle","bordered","marginTop","paddingRight","avatar","zIndex","Notification","_useContext2","setTimeout","defineProperty","react_animation","animationIn","animationOut","Fragment","Message","User","getSocialMediaLink","socialInfo","iconName","isAvailable","List","marginRight","circular","margin","horizontal","React","createContext","App","screenWidth","window","innerWidth","onlyTablet","getInitialColumns","Provider","Segment","components_Notification","components_Nav","react_router","exact","path","render","components_Home","match","components_Photo","components_User","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1d67bb48.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Menu, Icon, Input, Form, Responsive,\n} from 'semantic-ui-react';\nimport { animateScroll } from 'react-scroll';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport scrollOptionsType from '../types/scrollOptions';\n\nconst Nav = ({\n  setSearchQuery,\n  nightMode,\n  setNightMode,\n  columns,\n  setColumns,\n  loading,\n  history,\n  scrollOptions,\n}) => {\n  const [search, setSearch] = useState('');\n\n  const executeSearch = async (event) => {\n    event.preventDefault();\n    animateScroll.scrollToTop(scrollOptions);\n    setSearchQuery(search);\n    history.push('/');\n  };\n\n  const backHome = async () => {\n    setSearch('');\n    setSearchQuery('');\n    history.push('/');\n  };\n\n  const isHome = history.location.pathname === '/';\n  const linkBehavior = isHome ? () => animateScroll.scrollToTop(scrollOptions) : backHome;\n\n  return (\n    <Menu borderless inverted={nightMode} fixed=\"top\">\n      <Menu.Item header onClick={linkBehavior}>\n        <Icon className=\"primary\" name=\"image\" />\n        <Responsive minWidth={Responsive.onlyMobile.maxWidth}>\n          beaut\n          <span className=\"primary\">image</span>\n        </Responsive>\n      </Menu.Item>\n      <Responsive minWidth={Responsive.onlyMobile.maxWidth}>\n        <Menu secondary>\n          <Menu.Item active={columns === 1} onClick={() => setColumns(1)}>\n            <Icon name=\"list layout\" />\n          </Menu.Item>\n          <Menu.Item active={columns === 2} onClick={() => setColumns(2)}>\n            <Icon name=\"block layout\" />\n          </Menu.Item>\n          <Menu.Item active={columns === 3} onClick={() => setColumns(3)}>\n            <Icon name=\"grid layout\" />\n          </Menu.Item>\n        </Menu>\n      </Responsive>\n      <Menu.Item>\n        <Form onSubmit={executeSearch}>\n          <Input\n            id=\"search-input\"\n            loading={loading}\n            transparent\n            size=\"small\"\n            type=\"text\"\n            onChange={({ target }) => setSearch(target.value)}\n            value={search}\n            placeholder=\"search...\"\n            icon={<Icon inverted={nightMode} name=\"search\" link onClick={executeSearch} />}\n          />\n        </Form>\n      </Menu.Item>\n      <Menu.Item position=\"right\" active={nightMode} onClick={() => setNightMode(!nightMode)}>\n        <Icon name=\"moon\" />\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nconst {\n  func, bool, number,\n} = PropTypes;\n\nNav.propTypes = {\n  setSearchQuery: func.isRequired,\n  nightMode: bool.isRequired,\n  setNightMode: func.isRequired,\n  columns: number.isRequired,\n  setColumns: func.isRequired,\n  loading: bool.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n  scrollOptions: scrollOptionsType.isRequired,\n};\n\nexport default withRouter(Nav);\n","import PropTypes from 'prop-types';\n\nconst scrollOptionsType = PropTypes.shape({\n  duration: PropTypes.number.isRequired,\n  smooth: PropTypes.string.isRequired,\n});\n\nexport default scrollOptionsType;\n","import PropTypes from 'prop-types';\n\nconst {\n  any, arrayOf, bool, number, shape, string,\n} = PropTypes;\n\nconst sponsorShape = shape({\n  accepted_tos: bool,\n  bio: string,\n  first_name: string,\n  id: string.isRequired,\n  instagram_username: string,\n  last_name: string,\n  links: shape({\n    followers: string.isRequired,\n    following: string.isRequired,\n    html: string.isRequired,\n    likes: string.isRequired,\n    photos: string.isRequired,\n    portfolio: string.isRequired,\n    self: string.isRequired,\n  }).isRequired,\n  location: string,\n  name: string.isRequired,\n  portfolio_url: string,\n  profile_image: shape({\n    large: string.isRequired,\n    medium: string.isRequired,\n    small: string.isRequired,\n  }).isRequired,\n  total_collections: number.isRequired,\n  total_likes: number.isRequired,\n  total_photos: number.isRequired,\n  twitter_username: string,\n  updated_at: string.isRequired,\n  username: string.isRequired,\n});\n\nconst photoType = shape({\n  alt_description: string,\n  categories: arrayOf(string).isRequired,\n  color: string.isRequired,\n  created_at: string.isRequired,\n  current_user_collections: arrayOf(any).isRequired,\n  description: string,\n  height: number.isRequired,\n  id: string.isRequired,\n  liked_by_user: bool.isRequired,\n  likes: number.isRequired,\n  links: shape({\n    download: string.isRequired,\n    download_location: string.isRequired,\n    html: string.isRequired,\n    self: string.isRequired,\n  }).isRequired,\n  sponsorship: shape({\n    impressions_id: string,\n    sponsor: sponsorShape.isRequired,\n    tagline: string.isRequired,\n  }),\n  updated_at: string.isRequired,\n  urls: shape({\n    full: string.isRequired,\n    raw: string.isRequired,\n    regular: string.isRequired,\n    small: string.isRequired,\n    thumb: string.isRequired,\n  }).isRequired,\n  user: sponsorShape.isRequired,\n  width: number.isRequired,\n});\n\nexport default photoType;\n","import PropTypes from 'prop-types';\n\nconst childrenType = PropTypes.oneOfType([\n  PropTypes.arrayOf(PropTypes.node),\n  PropTypes.node,\n]);\n\nexport default childrenType;\n","import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport PropTypes from 'prop-types';\nimport { Header } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport childrenType from '../types/children';\nimport photoType from '../types/photo';\n\nconst InfiniteScrollWrapper = ({\n  children, photos, getMorePhotos, hasMore, nightMode,\n}) => (\n  <InfiniteScroll\n    dataLength={photos.length} // This is important field to render the next data\n    next={getMorePhotos}\n    scrollableTarget=\"iamge-gallery\"\n    hasMore={hasMore}\n    endMessage={(\n      <Header inverted={nightMode} textAlign=\"center\">\n        You have seen it all!\n        {' '}\n        <span role=\"img\" aria-label=\"smiley\">😄</span>\n        <Header.Subheader>\n          Go\n          {' '}\n          <Link to=\"/\">home</Link>\n          ?\n        </Header.Subheader>\n      </Header>\n      )}\n  >\n    {children}\n  </InfiniteScroll>\n);\n\nInfiniteScrollWrapper.propTypes = {\n  children: childrenType.isRequired,\n  photos: PropTypes.arrayOf(photoType).isRequired,\n  getMorePhotos: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  nightMode: PropTypes.bool.isRequired,\n};\n\nexport default InfiniteScrollWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'semantic-ui-react';\n\nconst Loading = ({\n  nightMode,\n  loading,\n}) => (\n  <Loader inverted={nightMode} active={loading} size=\"big\" style={{ position: 'fixed', top: '95%', left: '50%' }} />\n);\n\nLoading.propTypes = {\n  nightMode: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Loading;\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport photoType from '../types/photo';\n\nconst Brick = ({ photo }) => (\n  <Link to={`/photos/${photo.id}`}>\n    <Image\n      srcSet={`${photo.urls.thumb} 600w, \n            ${photo.urls.small} 1000w, \n            ${photo.urls.regular} 1500w`}\n      src={photo.urls.thumb}\n      alt={photo.alt_description}\n      size=\"medium\"\n      style={{ width: '100%', paddingBottom: '0.33rem' }}\n    />\n  </Link>\n);\n\nBrick.propTypes = {\n  photo: photoType.isRequired,\n};\n\nexport default Brick;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from 'semantic-ui-react';\nimport InfiniteScrollWrapper from './InfiniteScrollWrapper';\nimport photoType from '../types/photo';\nimport Loading from './Loading';\nimport Brick from './Brick';\n\nconst Masonry = ({\n  photos,\n  getMorePhotos,\n  nightMode,\n  loading,\n  columns,\n  hasMore,\n}) => {\n  const getColumnOfBricks = (columnIndex) => {\n    const bricks = [];\n    for (let i = columnIndex; i < photos.length; i += columns) {\n      const photo = photos[i];\n      bricks.push(<Brick key={photo.id} photo={photo} />);\n    }\n    return <Grid.Column key={`col-${columnIndex}`}>{bricks}</Grid.Column>;\n  };\n\n  const getBricks = () => {\n    // TODO: fix loading here, should load while this function is happening.\n    const result = [];\n    for (let i = 0; i < columns; i += 1) {\n      result.push(getColumnOfBricks(i));\n    }\n    return result;\n  };\n\n  const layout = (\n    <Grid\n      stackable\n      id=\"image-gallery\"\n      centered\n      columns={columns}\n      padded\n    >\n      {getBricks()}\n    </Grid>\n  );\n\n\n  return (\n    <div>\n      <InfiniteScrollWrapper nightMode={nightMode} hasMore={hasMore} photos={photos} getMorePhotos={getMorePhotos}>\n        {layout}\n      </InfiniteScrollWrapper>\n      <Loading nightMode={nightMode} loading={loading} />\n    </div>\n  );\n};\n\nMasonry.defaultProps = {\n  hasMore: false,\n};\n\nMasonry.propTypes = {\n  photos: PropTypes.arrayOf(photoType).isRequired,\n  getMorePhotos: PropTypes.func.isRequired,\n  nightMode: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  columns: PropTypes.number.isRequired,\n  hasMore: PropTypes.bool,\n};\n\nexport default Masonry;\n","import axios from 'axios';\n\nconst baseUrl = 'https://api.unsplash.com';\nexport const PER_PAGE = 12;\n\nconst getAuthHeader = () => ({\n  Authorization: `Client-ID ${process.env.REACT_APP_ACCESS_KEY}`,\n});\n\nconst getPhotos = async (page) => {\n  const headers = getAuthHeader();\n  const params = {\n    page,\n    per_page: PER_PAGE,\n  };\n  const url = `${baseUrl}/photos`;\n  const result = await axios.get(url, { headers, params });\n\n  return result.data;\n};\n\nconst getPhotoById = async (id) => {\n  const headers = getAuthHeader();\n  const url = `${baseUrl}/photos/${id}`;\n  const result = await axios.get(url, { headers });\n  return result.data;\n};\n\nconst searchPhotos = async (page, query) => {\n  const headers = getAuthHeader();\n  const params = {\n    page,\n    per_page: PER_PAGE,\n    query,\n  };\n  const url = `${baseUrl}/search/photos`;\n  const result = await axios.get(url, { headers, params });\n\n  return result.data.results;\n};\n\nconst getUserPhotos = async (page, username) => {\n  const headers = getAuthHeader();\n  const params = {\n    page,\n    per_page: PER_PAGE,\n  };\n  const url = `${baseUrl}/users/${username}/photos`;\n  const result = await axios.get(url, { headers, params });\n\n  return result.data;\n};\n\nexport default {\n  getPhotos,\n  getPhotoById,\n  searchPhotos,\n  getUserPhotos,\n};\n","import photoService, { PER_PAGE } from '../services/photos';\n\nconst photoReducer = async (options) => {\n  const {\n    isInit,\n    actionType,\n    actionData,\n    photos,\n    currentPage,\n    setCurrentPage,\n    setPhotos,\n    setLoading,\n    setMessage,\n    setHasMore,\n  } = options;\n\n  setLoading(true);\n  const page = isInit ? 1 : currentPage;\n  const items = isInit ? [] : photos;\n\n  try {\n    let response;\n\n    switch (actionType) {\n      case 'photos':\n        response = await photoService.getPhotos(page);\n        break;\n      case 'search':\n        response = await photoService.searchPhotos(page, actionData);\n        break;\n      case 'user':\n        response = await photoService.getUserPhotos(page, actionData);\n        break;\n      default:\n        throw new Error(`invalid type ${actionType}`);\n    }\n\n    setHasMore(response.length === PER_PAGE);\n    setPhotos(items.concat(response));\n    setCurrentPage(page + 1);\n  } catch (err) {\n    setMessage({\n      type: 'error',\n      header: 'Error',\n      content: err.message,\n    });\n    setHasMore(false);\n  }\n\n  setLoading(false);\n};\n\nexport default photoReducer;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Container, Header, Divider, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Masonry from './Masonry';\nimport { MessageContext } from '../App';\nimport photoReducer from '../reducers/photoReducer';\n\nconst Home = ({\n  nightMode,\n  columns,\n  searchQuery,\n}) => {\n  const [photos, setPhotos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const [, setMessage] = useContext(MessageContext);\n\n  useEffect(() => {\n    photoReducer({\n      isInit: true,\n      actionType: searchQuery ? 'search' : 'photos',\n      actionData: searchQuery || null,\n      photos,\n      currentPage,\n      setCurrentPage,\n      setPhotos,\n      setLoading,\n      setMessage,\n      setHasMore,\n    });\n  }, [searchQuery]);\n\n  if (!photos.length) {\n    return null;\n  }\n\n  const getMorePhotos = () => photoReducer({\n    isInit: false,\n    actionType: searchQuery ? 'search' : 'photos',\n    actionData: searchQuery || null,\n    photos,\n    currentPage,\n    setCurrentPage,\n    setPhotos,\n    setLoading,\n    setMessage,\n    setHasMore,\n  });\n\n  return (\n    <Container className=\"page\">\n      <Header\n        inverted={nightMode}\n        as=\"h1\"\n        textAlign=\"center\"\n        icon\n      >\n        <Icon name=\"image\" />\n        beaut\n        <span className=\"primary\">image</span>\n        <Header.Subheader>a simple way to find beautiful images.</Header.Subheader>\n      </Header>\n      <Divider inverted={nightMode} />\n      <Masonry\n        hasMore={hasMore}\n        photos={photos}\n        getMorePhotos={getMorePhotos}\n        nightMode={nightMode}\n        loading={loading}\n        columns={columns}\n      />\n    </Container>\n  );\n};\n\nHome.propTypes = {\n  nightMode: PropTypes.bool.isRequired,\n  columns: PropTypes.number.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n};\n\nexport default Home;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Container, Loader, Image, Icon, Header, Grid, Menu, Button, Label, Responsive, Sidebar, Segment,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { animateScroll } from 'react-scroll';\nimport { withRouter } from 'react-router-dom';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport photoService from '../services/photos';\n// eslint-disable-next-line import/no-cycle\nimport { MessageContext } from '../App';\nimport Masonry from './Masonry';\nimport scrollOptionsType from '../types/scrollOptions';\nimport photoReducer from '../reducers/photoReducer';\n\nconst Photo = ({\n  photoId,\n  nightMode,\n  columns,\n  scrollOptions,\n  history,\n}) => {\n  const [photos, setPhotos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [photo, setPhoto] = useState(null);\n  const [hasMore, setHasMore] = useState(false);\n  const [, setMessage] = useContext(MessageContext);\n  const [tags, setTags] = useState('');\n\n  useEffect(() => {\n    const fetchPhoto = async () => {\n      let result;\n      setLoading(true);\n\n      animateScroll.scrollToTop(scrollOptions);\n\n      try {\n        result = await photoService.getPhotoById(photoId);\n        const selectedTags = result.tags\n          .slice(0, Math.min(5, result.tags.length))\n          .map(tag => tag.title)\n          .filter(tag => tag.length > 3)\n          .join(' ');\n        setTags(selectedTags);\n        setPhoto(result);\n        photoReducer({\n          isInit: true,\n          actionType: 'search',\n          actionData: selectedTags,\n          photos,\n          currentPage,\n          setPhotos,\n          setCurrentPage,\n          setLoading,\n          setMessage,\n          setHasMore,\n        });\n      } catch (err) {\n        setMessage({\n          type: 'error',\n          header: 'Error',\n          content: err.message,\n        });\n      }\n\n      setLoading(false);\n    };\n    fetchPhoto();\n  }, [photoId]);\n\n  const getTitle = () => {\n    let { title } = photo.story;\n\n    if (!title) {\n      title = photo.alt_description;\n\n      if (!title) {\n        title = `Photo ${photo.id}`;\n      }\n    }\n\n    return title.toLowerCase();\n  };\n\n  if (!photo) {\n    return <Loader />;\n  }\n\n  const filteredPhotos = photos.filter(p => p.id !== photoId);\n\n  const socialMedia = (type) => {\n    const handle = _.get(photo, `user.${type}_username`);\n\n    if (!handle) {\n      return null;\n    }\n\n    return (\n      <Menu.Item link>\n        <a href={`https://www.${type}.com/${handle}`}>\n          <Icon name={type} />\n          {type}\n        </a>\n      </Menu.Item>\n    );\n  };\n\n  const goToUserPage = () => {\n    animateScroll.scrollToTop(scrollOptions);\n    history.push(`/users/${photo.user.username}`);\n  };\n\n  const getMorePhotos = () => photoReducer({\n    isInit: false,\n    actionType: 'search',\n    actionData: tags,\n    photos,\n    currentPage,\n    setPhotos,\n    setCurrentPage,\n    setLoading,\n    setMessage,\n    setHasMore,\n  });\n\n  const photoStyle = photo.width > photo.height \n  ? {width: '100vw', height: 'auto'}\n  : {height: '100vh', width: 'auto'};\n\n  return (\n    <Container className=\"page\">\n      <Container>\n        <Header\n          textAlign=\"center\"\n          inverted={nightMode}\n          as=\"h2\"\n        >\n          {getTitle()}\n        </Header>\n        <Image\n          style={photoStyle}\n          centered\n          bordered\n          src={photo.urls.thumb}\n          srcSet={`${photo.urls.thumb} 200w, \n                      ${photo.urls.small} 400w, \n                      ${photo.urls.regular} 1080w`}\n        />\n      </Container>\n\n      <Menu\n        inverted={nightMode}\n        style={{ marginTop: '1.5rem' }}\n        borderless\n        stackable\n      >\n        <Menu.Item header link onClick={goToUserPage}>\n          <Image style={{ paddingRight: '3px' }} avatar src={photo.user.profile_image.small} />\n          {photo.user.first_name.toLowerCase()}\n              &nbsp;\n          <span className=\"primary\">\n            {photo.user.last_name ? photo.user.last_name.toLowerCase() : ''}\n          </span>\n        </Menu.Item>\n        {socialMedia('instagram')}\n        {socialMedia('twitter')}\n        <Menu.Item position=\"right\" link>\n          <a href={photo.links.download} download>\n            <Icon\n              name=\"download\"\n            />\n            download\n          </a>\n        </Menu.Item>\n      </Menu>\n\n      <Header inverted={nightMode} as=\"h2\">\nrelated\n        {' '}\n        <span className=\"primary\">images</span>\n      </Header>\n      <Masonry\n        photos={filteredPhotos}\n        getMorePhotos={getMorePhotos}\n        nightMode={nightMode}\n        loading={loading}\n        columns={columns}\n        photoId={photoId}\n        hasMore={hasMore}\n      />\n    </Container>\n  );\n};\n\nPhoto.propTypes = {\n  photoId: PropTypes.string.isRequired,\n  nightMode: PropTypes.bool.isRequired,\n  columns: PropTypes.number.isRequired,\n  scrollOptions: scrollOptionsType.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n};\n\nexport default withRouter(Photo);\n","import React, { useContext } from 'react';\nimport { Message } from 'semantic-ui-react';\nimport { AnimateOnChange } from 'react-animation';\nimport { MessageContext } from '../App';\n\nconst style = {\n  zIndex: 1000,\n  top: '5%',\n  width: '100%',\n  position: 'sticky',\n};\n\nconst Notification = () => {\n  const [message, setMessage] = useContext(MessageContext);\n  const duration = 10000;\n\n  setTimeout(() => {\n    setMessage(null);\n  }, duration);\n\n  const type = message ? { [message.type]: true } : '';\n\n  return (\n    <AnimateOnChange\n      style={style}\n      animationIn=\"bounceIn\"\n      animationOut=\"fadeOut\"\n    >\n      {message\n        ? (\n          <>\n            <Message\n              {...type}\n            >\n              <Message.Header>{message.header}</Message.Header>\n              <p>{message.content}</p>\n            </Message>\n\n          </>\n        )\n        : null\n    }\n    </AnimateOnChange>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container, Header, Image, Loader, List, Icon,\n} from 'semantic-ui-react';\nimport Masonry from './Masonry';\nimport { MessageContext } from '../App';\nimport photoReducer from '../reducers/photoReducer';\n\nconst User = ({\n  username,\n  nightMode,\n  columns,\n}) => {\n  const [photos, setPhotos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [, setMessage] = useContext(MessageContext);\n\n  useEffect(() => {\n    photoReducer({\n      isInit: true,\n      actionType: 'user',\n      actionData: username,\n      photos,\n      setPhotos,\n      currentPage,\n      setCurrentPage,\n      setLoading,\n      setMessage,\n      setHasMore,\n    });\n  }, [username]);\n\n  const getMorePhotos = () => photoReducer({\n    isInit: false,\n    actionType: 'user',\n    actionData: username,\n    photos,\n    setPhotos,\n    currentPage,\n    setCurrentPage,\n    setLoading,\n    setMessage,\n    setHasMore,\n  });\n\n  const getSocialMediaLink = (socialInfo) => {\n    const { url, iconName, isAvailable } = socialInfo;\n\n    if (!isAvailable) {\n      return null;\n    }\n\n    return (\n      <List.Item>\n        <a href={url}>\n          <Icon\n            name={iconName}\n            link\n            size=\"large\"\n          />\n        </a>\n      </List.Item>\n    );\n  };\n\n  if (!photos.length) {\n    return <Loader />;\n  }\n\n  const { user } = photos[0];\n\n  return (\n    <Container className=\"page\">\n      <Header inverted={nightMode} textAlign=\"center\" as=\"h1\">\n        <Image\n          style={{ marginRight: '0.5rem' }}\n          centered\n          circular\n          src={user.profile_image.large}\n        />\n        {user.first_name.toLowerCase()}\n        &nbsp;\n        <span className=\"primary\">\n          {user.last_name ? user.last_name.toLowerCase() : ''}\n        </span>\n      </Header>\n      <Container style={{margin: '1.5rem 0'}} textAlign=\"center\">\n        <List inverted={nightMode} horizontal>\n          {getSocialMediaLink({\n            isAvailable: !!user.portfolio_url,\n            iconName: 'briefcase',\n            url: user.portfolio_url,\n          })}\n          {getSocialMediaLink({\n            isAvailable: !!user.instagram_username,\n            iconName: 'instagram',\n            url: `https://www.instagram.com/${user.instagram_username}`,\n          })}\n          {getSocialMediaLink({\n            isAvailable: !!user.twitter_username,\n            iconName: 'twitter',\n            url: `https://www.twitter.com/${user.twitter_username}`,\n          })}\n        </List>\n      </Container>\n      <Masonry\n        photos={photos}\n        getMorePhotos={getMorePhotos}\n        nightMode={nightMode}\n        loading={loading}\n        columns={columns}\n        hasMore={hasMore}\n      />\n    </Container>\n  );\n};\n\nUser.propTypes = {\n  username: PropTypes.string.isRequired,\n  nightMode: PropTypes.bool.isRequired,\n  columns: PropTypes.number.isRequired,\n};\n\nexport default User;\n","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  HashRouter,\n  Route,\n} from 'react-router-dom';\nimport {\n  Segment, Responsive,\n} from 'semantic-ui-react';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport Photo from './components/Photo';\nimport Notification from './components/Notification';\nimport User from './components/User';\n\nconst scrollOptions = {\n  duration: 1000,\n  smooth: 'easeInOutQuint',\n};\n\nexport const MessageContext = React.createContext();\n\nconst getInitialColumns = () => {\n  const screenWidth = window.innerWidth;\n  if (screenWidth <= Responsive.onlyMobile.maxWidth) {\n    return 1;\n  } if (screenWidth <= Responsive.onlyTablet.maxWidth) {\n    return 2;\n  }\n  return 3;\n};\n\nconst App = () => {\n  const [columns, setColumns] = useState(getInitialColumns());\n  const [nightMode, setNightMode] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [message, setMessage] = useState(null);\n\n  return (\n    <MessageContext.Provider value={[message, setMessage]}>\n      <Segment inverted={nightMode}>\n        <HashRouter>\n          <Notification />\n          <Nav\n            searchQuery={searchQuery}\n            setSearchQuery={setSearchQuery}\n            nightMode={nightMode}\n            setNightMode={setNightMode}\n            columns={columns}\n            setColumns={setColumns}\n            scrollOptions={scrollOptions}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Home\n                nightMode={nightMode}\n                columns={columns}\n                searchQuery={searchQuery}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/photos/:id\"\n            render={({ match }) => (\n              <Photo\n                photoId={match.params.id}\n                nightMode={nightMode}\n                columns={columns}\n                scrollOptions={scrollOptions}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/users/:username\"\n            render={({ match }) => (\n              <User\n                username={match.params.username}\n                nightMode={nightMode}\n                columns={columns}\n              />\n            )}\n          />\n        </HashRouter>\n      </Segment>\n    </MessageContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}